{"version":3,"sources":["api/index.js","components/component-library/image-render.js","components/pages/home.js","components/pages/about.js","components/component-library/imageSearchRender.js","components/pages/imageSearch.js","components/component-library/roverModal.js","components/component-library/roverImageRender.js","components/pages/roverImages.js","util.js","components/layout/nav.js","App.js","serviceWorker.js","index.js"],"names":["imageOfDay","a","axios","get","process","data","error","ErrorMessage","imageArchiveSearch","textQuery","StartDate","EndDate","roverImageSearch","rover","earthDate","image","explanation","copyright","date","className","src","alt","Home","useState","setImage","useEffect","fetchApi","imageurl","url","About","Fragment","Image","title","date_created","keywords","map","keyword","index","key","ImageSearch","year","Date","getFullYear","images","setImages","search","setSearch","startYear","setStartYear","endYear","setEndYear","querySearch","setQuerySearch","queryStartYear","setQueryStartYear","queryEndYear","setQueryEndYear","undefined","onSubmit","e","preventDefault","type","value","onChange","console","log","target","defaultValue","collection","items","nasa_id","links","href","RoverModal","roverData","name","status","cameras","camera","full_name","RoverImages","separator","newDate","getDate","month","getMonth","getTodaysDate","setRover","setDate","fetchAPI","photos","htmlFor","id","earth_date","img_src","Nav","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3bbdcec6.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst shareAbleUrl = \"https://api.nasa.gov\"\n\nexport const imageOfDay = async () => {\n    try {\n        // This may look janky, but its the naming of the data in the api\n        const {data} = await axios.get(`${shareAbleUrl}/planetary/apod?api_key=${process.env.REACT_APP_API_KEY}`);\n        return data\n    }\n    catch (error) {\n        return {error, ErrorMessage : \"There has been an issue getting the Image of the day\"}\n    }\n}\n\nexport const imageArchiveSearch = async (textQuery,StartDate,EndDate) => {\n    try {\n        const {data} = await axios.get(`https://images-api.nasa.gov/search?q=${textQuery}&year_start=${StartDate}&year_end=${EndDate}&media_type=image`)\n        return {data};\n    }\n    catch(error) {\n        return {error, ErrorMessage : \"There has been an issue getting that image\"}\n    }\n}\n\nexport const roverImageSearch = async (rover, earthDate) => {\n    try {\n        const {data} = await axios.get(`${shareAbleUrl}/mars-photos/api/v1/rovers/${rover}/photos?earth_date=${earthDate}&api_key=${process.env.REACT_APP_API_KEY}`)\n        return data;\n    }\n    catch(error) {\n        return {error, ErrorMessage : \"There has been an issue getting that image\"}\n    }\n}","import React from 'react'\n\nconst image = ({image, explanation, copyright, date}) => {\n    return (\n        <div className=\"image\">\n            <img src={image} alt={explanation} />\n            <p>{copyright}</p>\n            <p>{date}</p>\n        </div>\n    )\n}\n\nexport default image;","import React, {useEffect, useState} from 'react'\nimport {imageOfDay} from '../../api/index'\nimport ImageRender from '../component-library/image-render';\n\nexport default function Home() {\n    const [image, setImage] = useState('');\n\n    useEffect(() => {\n      const fetchApi = async () => {\n        setImage(await imageOfDay());\n      }\n      fetchApi();\n    }, [])\n  \n\n  \n    if(image.imageurl === null ) {\n      return <h3> The Image is loading</h3>\n      \n    }\n    else {\n      return (\n        <div className=\"mainImage\">\n        <ImageRender \n        image={image.url}\n        explanation={image.explanation}\n        copyright={image.copyright}\n        date={image.date}/>\n    </div>\n    );\n    }\n\n}","import React from 'react'\n\nexport default function About() {\n    return (\n        <React.Fragment>\n            <h1>About</h1>\n            <p>The Creation of a full React Application</p>\n        </React.Fragment>\n    )\n}","import React from \"react\";\n\nconst Image = ({ image, title, date_created, keywords }) => {\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card mb-4 shadow-sm\">\n      <img src={image} alt={title} className=\"card-img-top\"/>\n      <div className=\"card-body\">\n      <h5 className=\"card-title\">{title}</h5>\n      <p className=\"card-text\">{date_created}</p>\n\n      <p className=\"card-text\">Keywords</p>\n      {keywords.map((keyword ,index) => (\n        <span className=\"badge badge-pill badge-dark\" key={index}> {keyword}</span>\n      ))}\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Image;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport ImageRenderer from \"../component-library/imageSearchRender\";\nimport { imageArchiveSearch } from \"../../api/index\";\nexport default function ImageSearch() {\n  // Get Todays Year\n  let newDate = new Date();\n  let year = newDate.getFullYear();\n  // Set State\n  const [images, setImages] = useState([]);\n\n  //Input States\n  const [search, setSearch] = useState(\"Hubble\");\n  const [startYear, setStartYear] = useState(\"1950\");\n  const [endYear, setEndYear] = useState(year);\n\n  // Query States\n  const [querySearch, setQuerySearch] = useState();\n  const [queryStartYear, setQueryStartYear] = useState();\n  const [queryEndYear, setQueryEndYear] = useState();\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setImages(await imageArchiveSearch(search, startYear, endYear));\n    };\n    fetchApi();\n  }, [querySearch, queryStartYear, queryEndYear]);\n\n  const updateSearch = (e) => {\n    console.log(search);\n    setSearch(e.target.value);\n  };\n\n  const updateStartDate = (e) => {\n    setStartYear(e.target.value);\n  };\n\n  const updateEndDate = (e) => {\n    setEndYear(e.target.value);\n  };\n\n  const submitSearch = (e) => {\n    e.preventDefault();\n    setQuerySearch(search);\n    setQueryStartYear(startYear);\n    setQueryEndYear(endYear);\n  };\n\n  if (images.data === undefined) {\n    return <h4> Page is Loading</h4>;\n  } else {\n    return (\n      <>\n        <div className=\"jumbotron\">\n            <h1 className=\"display-4\">Nasa Image Search</h1>\n            <p className=\"lead\">Search The Nasa Image Database</p>\n        </div>\n        <div className=\"row\" >\n          <div className=\"col\">\n            <form className=\"search-form\" onSubmit={submitSearch}>\n              <input\n                className=\"search-bar\"\n                type=\"text\"\n                value={search}\n                onChange={updateSearch}\n              />\n              <input\n                className=\"date-search\"\n                type=\"year\"\n                defaultValue={startYear}\n                onChange={updateStartDate}\n              />\n              <input\n                className=\"date-search\"\n                type=\"year\"\n                defaultValue={endYear}\n                onChange={updateEndDate}\n              />\n              <button className=\"search-button\" type=\"submit\">\n                Search\n              </button>\n            </form>\n          </div>\n        </div>\n        <p></p>\n        <div className=\"row\">\n          {images.data.collection.items.map((image) => (\n            <ImageRenderer\n              key={image.data[0].nasa_id}\n              title={image.data[0].title}\n              date_created={image.data[0].date_created}\n              image={image.links[0].href}\n              keywords={image.data[0].keywords}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nconst RoverModal = ({ roverData, date_created }) => {\n\n  const roverStatusCheck = () => { \n    if(roverData.status === \"active\" || roverData.status === \"complete\") {\n      return <span className=\"badge badge-pill badge-success\"> {roverData.status}</span>\n    }\n  else return <p> {roverData.status}</p>\n  }\n  return (\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{roverData.name}</h5>\n      <p>{roverStatusCheck()}</p>\n      <p>{date_created}</p>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Full Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {roverData.cameras.map((camera, index) => (\n            <tr key={index}>\n              <td>{camera.name}</td>\n              <td>{camera.full_name}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RoverModal;\n","import React from \"react\";\nimport RoverModal from \"../component-library/roverModal\";\n\nconst Image = ({ image, date_created, roverData }) => {\n  return (\n    <div className=\"col-md-4\">\n      <div className=\"card mb-4 shadow-sm\">\n        <img className=\"card-img-top\" src={image} alt=\"Rover\"/>\n        <RoverModal date_created={date_created} roverData={roverData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Image;\n","import React, { useEffect, useState } from \"react\";\nimport RoverImageRender from \"../component-library/roverImageRender\";\nimport { roverImageSearch } from \"../../api/index\";\nimport {getTodaysDate} from '../../util'\nexport default function RoverImages() {\n\n  const todaysDate = getTodaysDate();\n\n  const [images, setImages] = useState([]);\n  const [rover, setRover] = useState(\"curiosity\");\n  const [date, setDate] = useState(\"2015-6-3\");\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setImages(await roverImageSearch(rover,date));\n    };\n    fetchAPI();\n  }, [rover]);\n  const updateRover = (e) => {\n    e.preventDefault();\n    setRover(e.target.value);\n  };\n\n  const updateDate = (e) =>{\n    e.preventDefault();\n    setDate(e.target.value);\n  }\n  if (images.photos === undefined) {\n    return <h4> This page is loading </h4>;\n  } else {\n    return (\n      <>\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Rover Images</h1>\n          <p className=\"lead\">See what our rovers are seeing</p>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <form>\n              <div className=\"form-row\">\n                <div className=\"col\">\n                  <label htmlFor=\"exampleFormControlSelect2\">\n                    Select Date{\" \"}\n                  </label>\n                  <input\n                    className=\"date-search\"\n                    type=\"date\"\n                    id=\"exampleFormControlSelect2\"\n                    defaultValue=\"2015-06-03\"\n                    onChange={updateDate}\n                  />\n                </div>\n                <div className=\"col-sm-5\">\n                  <select\n                    onChange={updateRover}\n                    className=\"form-control\"\n                    id=\"exampleFormControlSelect1\"\n                  >\n                    <option value=\"curiosity\">Curiosity</option>\n                    <option value=\"opportunity\">Opportunity</option>\n                    <option value=\"spirit\">Spirit</option>\n                  </select>\n                </div>\n                <div className=\"col-sm-1\"></div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"row\">\n          {images.photos.map((image) => (\n            <RoverImageRender\n              key={image.id}\n              date_created={image.earth_date}\n              image={image.img_src}\n              roverData={image.rover}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","export const getTodaysDate = (separator = \"-\") => {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${\n      month < 10 ? `0${month}` : `${month}`\n    }${separator}${date < 10 ? `0${date}` : `${date}`}`;\n  };","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//Pages\nimport Home from \"../pages/home\";\nimport About from \"../pages/about\";\nimport ImageSearch from \"../pages/imageSearch\";\nimport RoverImages from \"../pages/roverImages\";\n\nexport default function Nav() {\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"/nasa-explorer\">\n            {\" \"}\n            Nasa Explorer{\" \"}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav\">\n              <Link className=\"nav-item\" to=\"/nasa-explorer\">\n                <li className=\"nav-link\" >Home</li>\n              </Link>\n              <Link className=\"nav-item\" to=\"/nasa-explorer/imageSearch\">\n                <li className=\"nav-link\">Image Search</li>\n              </Link>\n              <Link className=\"nav-item\" to=\"/nasa-explorer/roverImages\">\n                <li className=\"nav-link\">Rover Images</li>\n              </Link>\n              <Link className=\"nav-item\" to=\"/nasa-explorer/about\">\n                <li className=\"nav-link\">About</li>\n              </Link>\n            </ul>\n          </div>\n        </nav>\n        <div className=\"container-flex\"> \n        <Switch>\n          <Route path=\"/nasa-explorer\" exact component={Home} />\n          <Route\n            path=\"/nasa-explorer/imageSearch\"\n            exact\n            component={ImageSearch}\n          />\n          <Route\n            path=\"/nasa-explorer/roverImages\"\n            exact\n            component={RoverImages}\n          />\n          <Route path=\"/nasa-explorer/about\" component={About} />\n        </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport Nav from './components/layout/nav'\nimport './App.css';\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n     <Nav/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}